{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"BPR_with_categories","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"qclMm0F480Qc","executionInfo":{"status":"ok","timestamp":1638038212546,"user_tz":480,"elapsed":345,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["import numpy as np\n","from collections import defaultdict\n","from tqdm import tqdm\n","import random\n","import pickle\n","from time import time"],"execution_count":1,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"8-Di_R9U9kqJ","executionInfo":{"status":"ok","timestamp":1638038227862,"user_tz":480,"elapsed":14396,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}},"outputId":"34db8f2f-96c9-4fb8-993c-c252106f390d"},"source":["from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","metadata":{"id":"T2p-bTXd9lbn","executionInfo":{"status":"ok","timestamp":1638038228105,"user_tz":480,"elapsed":1,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["location =  \"drive/MyDrive/Data_dictionaries/\""],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"8wvTe-Cu87jQ","executionInfo":{"status":"ok","timestamp":1638038243056,"user_tz":480,"elapsed":13652,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["with open(location+'train_set.pickle', 'rb') as handle:\n","    train_set = pickle.load(handle)\n","    \n","with open(location+'validation_set.pickle', 'rb') as handle:\n","    validation_set = pickle.load(handle)\n","    \n","with open(location+'test_set.pickle', 'rb') as handle:\n","    test_set = pickle.load(handle)\n","    \n","with open(location+'user_id.pickle', 'rb') as handle:\n","    user_id = pickle.load(handle)\n","    \n","with open(location+'item_id.pickle', 'rb') as handle:\n","    item_id = pickle.load(handle)\n","    \n","with open(location+'city_id.pickle', 'rb') as handle:\n","    city_id = pickle.load(handle)"],"execution_count":4,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"XBRJDVe0gHXk","executionInfo":{"status":"ok","timestamp":1638038259591,"user_tz":480,"elapsed":16144,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}},"outputId":"58c9fc9f-dcd3-47ea-af11-67f0e7794993"},"source":["categories = defaultdict(int)\n","f_business = \"drive/MyDrive/\" + 'yelp_dataset/yelp_academic_dataset_business.json'\n","null = None\n","for l in open(f_business):\n","    d = eval(l)\n","    if d['categories']:\n","        for i in d['categories'].split(','):\n","            categories[i] += 1\n","print(len(categories))"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["2487\n"]}]},{"cell_type":"code","metadata":{"id":"FkkbfqnLgN8P","executionInfo":{"status":"ok","timestamp":1638038259591,"user_tz":480,"elapsed":4,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["sorted_categories = [(k,v) for k, v in sorted(categories.items(), key=lambda item: item[1],reverse = True)]\n","category_id = {}\n","for c in sorted_categories[0:1000]:\n","    category_id[c[0]] = len(category_id)"],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"id":"jJb_nZcLgOwF","executionInfo":{"status":"ok","timestamp":1638038261887,"user_tz":480,"elapsed":2299,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["from scipy.sparse import lil_matrix\n","features = lil_matrix((len(item_id),1000), dtype=int)"],"execution_count":7,"outputs":[]},{"cell_type":"code","metadata":{"id":"OepTcAyfgRRr","executionInfo":{"status":"ok","timestamp":1638038282871,"user_tz":480,"elapsed":20988,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["indices = []\n","for l in open(f_business):\n","    d = eval(l)\n","    r = d['business_id']\n","    l = []\n","    if d['categories']:\n","        l = d['categories'].split(',')\n","    if r in item_id.keys():\n","        for i in l:\n","            if i in category_id.keys():\n","                indices.append([item_id[r],category_id[i]])\n","                features[item_id[r],category_id[i]] = 1 "],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"id":"xv2JSmrb9HFM","executionInfo":{"status":"ok","timestamp":1638038288595,"user_tz":480,"elapsed":5750,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["import torch\n","import torch.nn as nn\n","import torch.optim as optim"],"execution_count":9,"outputs":[]},{"cell_type":"code","metadata":{"id":"8HMdOiL1gZzi","executionInfo":{"status":"ok","timestamp":1638038290019,"user_tz":480,"elapsed":1444,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["v = [1 for i in range(len(indices))]\n","indices_ = np.array(indices)\n","indices_ = indices_.T\n","features_torch = torch.sparse_coo_tensor(indices_,v,(90932,1000))\n","features_torch = features_torch.to_dense()\n","features_torch.requires_grad = False\n","features_torch = features_torch.type(torch.float)"],"execution_count":10,"outputs":[]},{"cell_type":"code","metadata":{"id":"rjl76WhB9BQh","executionInfo":{"status":"ok","timestamp":1638038290020,"user_tz":480,"elapsed":6,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["#list containing tuples of the form (user,visited,not visited)\n","def train_samples(train_set,size = 1):\n","    user = []\n","    pos = []\n","    neg = []\n","    for k in train_set.keys():\n","        u,c = k\n","        for i in range(size):\n","            user.append(u)\n","        [pos.append(i) for i in random.sample(train_set[k][0],size)]\n","        [neg.append(i) for i in random.sample(train_set[k][1],size)]\n","    return user,pos,neg"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-u8e8JA9-256","executionInfo":{"status":"ok","timestamp":1638038290204,"user_tz":480,"elapsed":189,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}},"outputId":"8ae85d1d-c53c-41bf-b590-38e1188169af"},"source":["device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n","device"],"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["device(type='cpu')"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"xyTn2P0E9Jes","executionInfo":{"status":"ok","timestamp":1638038290686,"user_tz":480,"elapsed":5,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["class BPR(nn.Module):\n","    def __init__(self, user_size, item_size, dim, weight_decay):\n","        super().__init__()\n","        self.W1 = nn.Parameter(torch.empty(user_size, dim))\n","        self.W2 = nn.Parameter(torch.empty(user_size, 1000))\n","        self.H = nn.Parameter(torch.empty(item_size, dim))\n","        nn.init.xavier_normal_(self.W1.data)\n","        nn.init.xavier_normal_(self.W2.data)\n","        nn.init.xavier_normal_(self.H.data)\n","        self.weight_decay = weight_decay\n","\n","    def forward(self, user, item1, item2):\n","        \"\"\"Return loss value.\n","        Args:\n","            u(torch.LongTensor): tensor stored user indexes. [batch_size,]\n","            i(torch.LongTensor): tensor stored item indexes which is prefered by user. [batch_size,]\n","            j(torch.LongTensor): tensor stored item indexes which is not prefered by user. [batch_size,]\n","        Returns:\n","            torch.FloatTensor\n","        \"\"\"\n","        u = self.W1[user, :]\n","        uf = self.W2[user,:]\n","        i = self.H[item1, :]\n","        j = self.H[item2, :]\n","        fi = features_torch[item1]\n","        fj = features_torch[item2]\n","        \n","        x_ui = torch.mul(u, i).sum(dim=1)\n","        x_uif = torch.mul(uf, fi).sum(dim=1)\n","        x_uj = torch.mul(u, j).sum(dim=1)\n","        x_ujf = torch.mul(uf, fj).sum(dim=1)\n","        x_uij = x_ui + x_uif - x_uj - x_ujf\n","        \n","        log_prob = nn.functional.logsigmoid(x_uij).sum()\n","        regularization = self.weight_decay * (u.norm(dim=1).pow(2).sum() + i.norm(dim=1).pow(2).sum() + \n","                                              j.norm(dim=1).pow(2).sum() + uf.norm(dim=1).pow(2).sum())\n","        return -log_prob + regularization\n","    \n","    def recommend(self,u,c,data):\n","        \"\"\"Return recommended item list given users.\n","        Args:\n","            u(torch.LongTensor): tensor stored user indexes. [batch_size,]\n","        Returns:\n","            pred(torch.LongTensor): recommended item list sorted by preference. [batch_size, item_size]\n","        \"\"\"\n","        \n","        U = self.W1[u, :]\n","        UF = self.W2[u,:]\n","        combined_r = data[(u,c)][0] + data[(u,c)][1]\n","        h = self.H[combined_r,:]\n","        hf = features_torch[combined_r,:]\n","        x_ui = torch.matmul(U,h.t()) + torch.matmul(UF,hf.t())\n","        pred = torch.argsort(x_ui)\n","        pred = [combined_r[int(i)] for i in pred[-5:].cpu().numpy()]\n","        avg_precision = len([i for i in pred if i in data[(u,c)][0]])/5\n","        return avg_precision"],"execution_count":14,"outputs":[]},{"cell_type":"code","metadata":{"id":"1HgBFNJa9QCN","executionInfo":{"status":"ok","timestamp":1638038290685,"user_tz":480,"elapsed":185,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["def precision(data,model):\n","    p = 0\n","    for k in data.keys():\n","        u,c = k\n","        p += model.recommend(u,c,data)\n","    p = p/len(data)\n","    return p"],"execution_count":13,"outputs":[]},{"cell_type":"code","metadata":{"id":"fohAgyq-g96e","executionInfo":{"status":"ok","timestamp":1638038290686,"user_tz":480,"elapsed":4,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["def precision_base(data,model):\n","    p = 0\n","    for k in data.keys():\n","        u,c = k\n","        if model.recommend(u,c,data) > 0:\n","            p += 1\n","    p = p/len(data)\n","    return p"],"execution_count":15,"outputs":[]},{"cell_type":"code","metadata":{"id":"mwItWMCrhAcW","executionInfo":{"status":"ok","timestamp":1638038756319,"user_tz":480,"elapsed":341,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["model = BPR(len(user_id),len(item_id),50,0.01)\n","model.load_state_dict(torch.load(\"drive/MyDrive/yelp_dataset/\"+'model_bpr_categories',map_location=torch.device('cpu')))\n","model.to(device)\n","optimizer = optim.SGD(model.parameters(), lr=0.001)"],"execution_count":26,"outputs":[]},{"cell_type":"code","metadata":{"id":"kFb3RQ0PiTcx","executionInfo":{"status":"ok","timestamp":1638038419166,"user_tz":480,"elapsed":123,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}}},"source":["features_torch = features_torch.to(device)"],"execution_count":23,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kAytuyVv9Sgz","outputId":"7c4c1709-782f-4c62-d8d0-9871f279354c"},"source":["epochs = 100000\n","for iteration in tqdm(range(0,epochs)):\n","    u, i, j  = train_samples(train_set,5)\n","    u = torch.tensor(u).to(device)\n","    i = torch.tensor(i).to(device)\n","    j = torch.tensor(j).to(device)\n","    optimizer.zero_grad()\n","    loss = model(u, i, j)\n","    loss.backward()\n","    if iteration%1000 == 0:\n","        torch.save(model.state_dict(),\"drive/MyDrive/yelp_dataset/\"+'model_bpr_categories')\n","        print(iteration,loss,precision(validation_set,model))\n","    optimizer.step()"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["  0%|          | 1/100000 [00:07<206:06:10,  7.42s/it]"]},{"output_type":"stream","name":"stdout","text":["0 tensor(31566.0469, device='cuda:0', grad_fn=<AddBackward0>) 0.05834838983951427\n"]},{"output_type":"stream","name":"stderr","text":["  1%|          | 1001/100000 [04:48<66:34:05,  2.42s/it]"]},{"output_type":"stream","name":"stdout","text":["1000 tensor(24581.0781, device='cuda:0', grad_fn=<AddBackward0>) 0.07518333510468851\n"]},{"output_type":"stream","name":"stderr","text":["  2%|▏         | 2001/100000 [09:29<65:15:34,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["2000 tensor(22641.8359, device='cuda:0', grad_fn=<AddBackward0>) 0.077372728238922\n"]},{"output_type":"stream","name":"stderr","text":["  3%|▎         | 3001/100000 [14:11<64:42:49,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["3000 tensor(21637.2832, device='cuda:0', grad_fn=<AddBackward0>) 0.07898820278456997\n"]},{"output_type":"stream","name":"stderr","text":["  4%|▍         | 4001/100000 [18:52<63:55:05,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["4000 tensor(20880.1953, device='cuda:0', grad_fn=<AddBackward0>) 0.08115633967478172\n"]},{"output_type":"stream","name":"stderr","text":["  5%|▌         | 5001/100000 [23:32<62:23:07,  2.36s/it]"]},{"output_type":"stream","name":"stdout","text":["5000 tensor(19870.5352, device='cuda:0', grad_fn=<AddBackward0>) 0.09335742374322831\n"]},{"output_type":"stream","name":"stderr","text":["  6%|▌         | 6001/100000 [28:13<62:40:18,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["6000 tensor(18541.8594, device='cuda:0', grad_fn=<AddBackward0>) 0.12987565097248127\n"]},{"output_type":"stream","name":"stderr","text":["  7%|▋         | 7001/100000 [32:53<61:33:37,  2.38s/it]"]},{"output_type":"stream","name":"stdout","text":["7000 tensor(17289.6895, device='cuda:0', grad_fn=<AddBackward0>) 0.15842278669360282\n"]},{"output_type":"stream","name":"stderr","text":["  8%|▊         | 8001/100000 [37:33<61:41:14,  2.41s/it]"]},{"output_type":"stream","name":"stdout","text":["8000 tensor(16190.4395, device='cuda:0', grad_fn=<AddBackward0>) 0.17357848868106387\n"]},{"output_type":"stream","name":"stderr","text":["  9%|▉         | 9001/100000 [42:15<60:52:47,  2.41s/it]"]},{"output_type":"stream","name":"stdout","text":["9000 tensor(15526.6641, device='cuda:0', grad_fn=<AddBackward0>) 0.1797215432033305\n"]},{"output_type":"stream","name":"stderr","text":[" 10%|█         | 10001/100000 [46:50<59:18:38,  2.37s/it]"]},{"output_type":"stream","name":"stdout","text":["10000 tensor(15072.5469, device='cuda:0', grad_fn=<AddBackward0>) 0.18290997980658283\n"]},{"output_type":"stream","name":"stderr","text":[" 11%|█         | 11001/100000 [51:24<60:21:36,  2.44s/it]"]},{"output_type":"stream","name":"stdout","text":["11000 tensor(14823.1387, device='cuda:0', grad_fn=<AddBackward0>) 0.18450419810820942\n"]},{"output_type":"stream","name":"stderr","text":[" 12%|█▏        | 12001/100000 [55:58<57:34:15,  2.36s/it]"]},{"output_type":"stream","name":"stdout","text":["12000 tensor(14623.1465, device='cuda:0', grad_fn=<AddBackward0>) 0.18658731002233428\n"]},{"output_type":"stream","name":"stderr","text":[" 13%|█▎        | 13001/100000 [1:00:31<57:23:40,  2.37s/it]"]},{"output_type":"stream","name":"stdout","text":["13000 tensor(14219.1318, device='cuda:0', grad_fn=<AddBackward0>) 0.1884366032522204\n"]},{"output_type":"stream","name":"stderr","text":[" 14%|█▍        | 14001/100000 [1:05:05<57:23:18,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["14000 tensor(14133.5645, device='cuda:0', grad_fn=<AddBackward0>) 0.1918801147837332\n"]},{"output_type":"stream","name":"stderr","text":[" 15%|█▌        | 15001/100000 [1:09:39<56:42:13,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["15000 tensor(13838.8066, device='cuda:0', grad_fn=<AddBackward0>) 0.1944521203103568\n"]},{"output_type":"stream","name":"stderr","text":[" 16%|█▌        | 16001/100000 [1:14:22<56:39:36,  2.43s/it]"]},{"output_type":"stream","name":"stdout","text":["16000 tensor(13764.0361, device='cuda:0', grad_fn=<AddBackward0>) 0.19659900095654684\n"]},{"output_type":"stream","name":"stderr","text":[" 17%|█▋        | 17001/100000 [1:19:08<55:03:17,  2.39s/it]"]},{"output_type":"stream","name":"stdout","text":["17000 tensor(13524.0957, device='cuda:0', grad_fn=<AddBackward0>) 0.19963864385164765\n"]},{"output_type":"stream","name":"stderr","text":[" 18%|█▊        | 18001/100000 [1:23:45<53:23:18,  2.34s/it]"]},{"output_type":"stream","name":"stdout","text":["18000 tensor(13350.3359, device='cuda:0', grad_fn=<AddBackward0>) 0.20218939313424975\n"]},{"output_type":"stream","name":"stderr","text":[" 19%|█▉        | 19001/100000 [1:28:19<52:47:34,  2.35s/it]"]},{"output_type":"stream","name":"stdout","text":["19000 tensor(13142.2148, device='cuda:0', grad_fn=<AddBackward0>) 0.20641938569456442\n"]},{"output_type":"stream","name":"stderr","text":[" 20%|██        | 20001/100000 [1:32:53<52:37:29,  2.37s/it]"]},{"output_type":"stream","name":"stdout","text":["20000 tensor(12881.3633, device='cuda:0', grad_fn=<AddBackward0>) 0.21030927835053234\n"]},{"output_type":"stream","name":"stderr","text":[" 21%|██        | 21001/100000 [1:37:26<53:35:40,  2.44s/it]"]},{"output_type":"stream","name":"stdout","text":["21000 tensor(12682.9463, device='cuda:0', grad_fn=<AddBackward0>) 0.21213731533639707\n"]},{"output_type":"stream","name":"stderr","text":[" 22%|██▏       | 22001/100000 [1:42:03<52:12:32,  2.41s/it]"]},{"output_type":"stream","name":"stdout","text":["22000 tensor(12561.2500, device='cuda:0', grad_fn=<AddBackward0>) 0.21526198320758447\n"]},{"output_type":"stream","name":"stderr","text":[" 23%|██▎       | 23001/100000 [1:46:41<51:12:42,  2.39s/it]"]},{"output_type":"stream","name":"stdout","text":["23000 tensor(12439.4277, device='cuda:0', grad_fn=<AddBackward0>) 0.2175364013179046\n"]},{"output_type":"stream","name":"stderr","text":[" 24%|██▍       | 24001/100000 [1:51:21<50:47:12,  2.41s/it]"]},{"output_type":"stream","name":"stdout","text":["24000 tensor(12244.7891, device='cuda:0', grad_fn=<AddBackward0>) 0.22038473801680822\n"]},{"output_type":"stream","name":"stderr","text":[" 25%|██▌       | 25001/100000 [1:55:59<49:54:15,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["25000 tensor(12097.5098, device='cuda:0', grad_fn=<AddBackward0>) 0.22261664363908434\n"]},{"output_type":"stream","name":"stderr","text":[" 26%|██▌       | 26001/100000 [2:00:35<49:01:01,  2.38s/it]"]},{"output_type":"stream","name":"stdout","text":["26000 tensor(11985.4277, device='cuda:0', grad_fn=<AddBackward0>) 0.22497608672549027\n"]},{"output_type":"stream","name":"stderr","text":[" 27%|██▋       | 27001/100000 [2:05:11<48:01:24,  2.37s/it]"]},{"output_type":"stream","name":"stdout","text":["27000 tensor(11817.0205, device='cuda:0', grad_fn=<AddBackward0>) 0.22654904878309418\n"]},{"output_type":"stream","name":"stderr","text":[" 28%|██▊       | 28001/100000 [2:09:49<48:29:39,  2.42s/it]"]},{"output_type":"stream","name":"stdout","text":["28000 tensor(11780.4629, device='cuda:0', grad_fn=<AddBackward0>) 0.22788819215646025\n"]},{"output_type":"stream","name":"stderr","text":[" 29%|██▉       | 29001/100000 [2:14:29<48:10:39,  2.44s/it]"]},{"output_type":"stream","name":"stdout","text":["29000 tensor(11636.7295, device='cuda:0', grad_fn=<AddBackward0>) 0.2300775852906927\n"]},{"output_type":"stream","name":"stderr","text":[" 30%|███       | 30001/100000 [2:19:08<46:24:30,  2.39s/it]"]},{"output_type":"stream","name":"stdout","text":["30000 tensor(11428.7842, device='cuda:0', grad_fn=<AddBackward0>) 0.2313104474439502\n"]},{"output_type":"stream","name":"stderr","text":[" 31%|███       | 31001/100000 [2:23:46<46:03:03,  2.40s/it]"]},{"output_type":"stream","name":"stdout","text":["31000 tensor(11320.0254, device='cuda:0', grad_fn=<AddBackward0>) 0.2340737591667677\n"]},{"output_type":"stream","name":"stderr","text":[" 32%|███▏      | 32001/100000 [2:28:30<45:41:30,  2.42s/it]"]},{"output_type":"stream","name":"stdout","text":["32000 tensor(11323.5059, device='cuda:0', grad_fn=<AddBackward0>) 0.2349027526836131\n"]},{"output_type":"stream","name":"stderr","text":[" 33%|███▎      | 33001/100000 [2:33:11<45:21:24,  2.44s/it]"]},{"output_type":"stream","name":"stdout","text":["33000 tensor(11151.8789, device='cuda:0', grad_fn=<AddBackward0>) 0.23651822722926025\n"]},{"output_type":"stream","name":"stderr","text":[" 33%|███▎      | 33168/100000 [2:33:58<5:10:20,  3.59it/s]"]}]},{"cell_type":"code","metadata":{"id":"TRA3j1lZhK7J"},"source":["#torch.save(model.state_dict(),'model_bpr_categories')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"pP5EIORj9VBH","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1638039075235,"user_tz":480,"elapsed":316170,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}},"outputId":"5abb534d-d667-4852-d8ad-836534c58871"},"source":["precision(train_set,model),precision(validation_set,model),precision(test_set,model)"],"execution_count":27,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.5455627590604712, 0.23651822722926025, 0.24678499309172755)"]},"metadata":{},"execution_count":27}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"eu4TJhLwsiPB","executionInfo":{"status":"ok","timestamp":1638039400842,"user_tz":480,"elapsed":325616,"user":{"displayName":"Shivaank Agarwal","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"12520761330791942642"}},"outputId":"cf2896fc-cdf0-499e-98b3-b556c547214b"},"source":["precision_base(train_set,model),precision_base(validation_set,model),precision_base(test_set,model)"],"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.948772451907748, 0.6881709002019343, 0.7075140822616643)"]},"metadata":{},"execution_count":28}]}]}